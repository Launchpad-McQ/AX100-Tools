%% UHFLayer2Decapsulate.m

% Olof Sj√∂din <me@olofsjodin.se> 2017
% KTH Royal institute of Technology
% School of Electrical Engineering, SPP

% Input parameters
syncSeqHex = 'c985a8ef';
dummyDataStream = '555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555930b51de89a8107000000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455000000955d34dc5d5e5f606162638599b3cf567a44c4bf2e79102e8c9eeb72ab8930b51de89a8107600000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263ce4023cc1d5c13df767d8ea328ec9ab63f935e0af0bcf87eef7c2c1b6e8e4a35930b51de89a810770000010203930b51de89a8107600000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263ce4023cc1d5c13df767d8ea328ec9ab63f935e0af0bcf87eef7c2c1b6e8e4a35930b51de89a810770000010203930b51de89a8107600000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263ce4023cc1d5c13df767d8ea328ec9ab63f935e0af0bcf87eef7c2c1b6e8e4a35930b51de89a810770000010203930b51de89a8107600000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263ce4023cc1d5c13df767d8ea328ec9ab63f935e0af0bcf87eef7c2c1b6e8e4a35930b51de89a810770000010203930b51de89a8107600000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263ce4023cc1d5c13df767d8ea328ec9ab63f935e0af0bcf87eef7c2c1b6e8e4a35930b51de89a810770000010203930b51de89a8107600000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263ce4023cc1d5c13df767d8ea328ec9ab63f935e0af0bcf87eef7c2c1b6e8e4a35930b51de89a810770000010203930b51de89a8107600000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263ce4023cc1d5c13df767d8ea328ec9ab63f935e0af0bcf87eef7c2c1b6e8e4a35930b51de89a810770000010203930b51de89a8107600000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263ce4023cc1d5c13df767d8ea328ec9ab63f935e0af0bcf87eef7c2c1b6e8e4a35930b51de89a810770000010203';

dataStream = hexStrToBinArr(dummyDataStream);

[synci, packetL, pac] = findSync(syncSeqHex, dataStream);

% TODO: add the rest of the data stream on queue again

cspHeader = pac(1:32);
packet = pac(33+1:end);
 
% synci in this case is 97*4=388
%
%% Extract the packet from the data stream with the length parameter

% We are assuming that the length parameter is the length of the packet plus the
% length parameter

hexoutput = binArrToHexStr(packet);